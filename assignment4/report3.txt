The runtime of mandelbrot_matrix() is timed 5 times, to get an average:

    mandelbrot_python(x_min, x_max, y_min, y_max, Nx, Ny, iterations= 1000):

    mandelbrot_numpy(x_min, x_max, y_min, y_max, Nx, Ny, iterations=1000):

    mandelbrot_numba(x_min, x_max, y_min, y_max, Nx, Ny, iterations= 1000):


Numba instead of numpy:
    pros:
        - much faster operations
    cons:
        - Support for more data types in numpy
        - Easier to read and c


Config 1:
    x_min = -2.0
    x_max = 2.0
    y_min = -2.0
    y_max = 2.0
    Nx = 4000
    Ny = 4000
    iterations = 100

    Process time:
    
    mandelbrot_1.py     ===>    174.15 seconds
    mandelbrot_2.py     ===>    42.52 seconds
    mandelbrot_3.py     ===>    1.66 seconds 



Config 2:
    x_min = -1.5
    x_max = 1.0
    y_min = -1.5
    y_max = 1.5
    Nx = 1000
    Ny = 1000
    iterations = 100

    Process time:

    mandelbrot_1.py     ===>    14.08 seconds
    mandelbrot_2.py     ===>    4.57 seconds
    mandelbrot_3.py     ===>    1.90 seconds 
    

Config 3:
    x_min = -1.5
    x_max = 0
    y_min = -1.5
    y_max = 1.5
    Nx = 1000
    Ny = 1000
    iterations = 1000

    Process time:

    mandelbrot_1.py     ===>    109.73 seconds
    mandelbrot_2.py     ===>    45.49 seconds
    mandelbrot_3.py     ===>    1.68 seconds 
